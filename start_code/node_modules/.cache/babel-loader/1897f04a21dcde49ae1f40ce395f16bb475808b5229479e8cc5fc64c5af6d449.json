{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsonbaptist/Documents/bnta_work/week_10/day_01/bakery_forms_lab/start_code/src/cake/CakeContainer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Cake from \"./Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CakeContainer = () => {\n  _s();\n  const [listOfCakes, setListOfCakes] = useState([{\n    cakeName: \"Victoria Sponge\",\n    ingredients: [\"eggs\", \"butter\", \"sugar\", \"self-raising flour\", \"baking powder\", \"milk\"],\n    price: 5,\n    rating: 5\n  }, {\n    cakeName: \"Tea Loaf\",\n    ingredients: [\"eggs\", \"oil\", \"dried fruit\", \"sugar\", \"self-raising flour\", \"strong tea\"],\n    price: 2,\n    rating: 3\n  }, {\n    cakeName: \"Carrot Cake\",\n    ingredients: [\"carrots\", \"walnuts\", \"oil\", \"cream cheese\", \"flour\", \"sugar\"],\n    price: 8,\n    rating: 5\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listOfCakes.map((cake, index) => /*#__PURE__*/_jsxDEV(Cake, {\n      cake: cake\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(CakeContainer, \"ona3yzTSEY2fEIuAzGhfkitkVH8=\");\n_c = CakeContainer;\nexport default CakeContainer;\nvar _c;\n$RefreshReg$(_c, \"CakeContainer\");","map":{"version":3,"names":["useState","Cake","jsxDEV","_jsxDEV","Fragment","_Fragment","CakeContainer","_s","listOfCakes","setListOfCakes","cakeName","ingredients","price","rating","children","map","cake","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelsonbaptist/Documents/bnta_work/week_10/day_01/bakery_forms_lab/start_code/src/cake/CakeContainer.js"],"sourcesContent":["import { useState } from \"react\";\nimport Cake from \"./Cake.js\";\n\nconst CakeContainer = () => {\n  const [listOfCakes, setListOfCakes] = useState([\n    {\n      cakeName: \"Victoria Sponge\",\n      ingredients: [\n        \"eggs\",\n        \"butter\",\n        \"sugar\",\n        \"self-raising flour\",\n        \"baking powder\",\n        \"milk\",\n      ],\n      price: 5,\n      rating: 5,\n    },\n    {\n      cakeName: \"Tea Loaf\",\n      ingredients: [\n        \"eggs\",\n        \"oil\",\n        \"dried fruit\",\n        \"sugar\",\n        \"self-raising flour\",\n        \"strong tea\",\n      ],\n      price: 2,\n      rating: 3,\n    },\n    {\n      cakeName: \"Carrot Cake\",\n      ingredients: [\n        \"carrots\",\n        \"walnuts\",\n        \"oil\",\n        \"cream cheese\",\n        \"flour\",\n        \"sugar\",\n      ],\n      price: 8,\n      rating: 5,\n    },\n  ]);\n\n  return (\n    <>\n      {listOfCakes.map((cake, index) => (\n        <Cake key={index} cake={cake} />\n      ))}\n    </>\n  );\n};\n\nexport default CakeContainer;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAC7C;IACEU,QAAQ,EAAE,iBAAiB;IAC3BC,WAAW,EAAE,CACX,MAAM,EACN,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,eAAe,EACf,MAAM,CACP;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,QAAQ,EAAE,UAAU;IACpBC,WAAW,EAAE,CACX,MAAM,EACN,KAAK,EACL,aAAa,EACb,OAAO,EACP,oBAAoB,EACpB,YAAY,CACb;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,KAAK,EACL,cAAc,EACd,OAAO,EACP,OAAO,CACR;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EAEF,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACGN,WAAW,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3Bd,OAAA,CAACF,IAAI;MAAae,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAChC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACd,EAAA,CAlDID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAoDnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}